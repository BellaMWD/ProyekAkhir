# -*- coding: utf-8 -*-
"""pad.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13YaPfKH7ADst4mMLfaZ8ACGocLu4ECAX

# Proyek Analisis Data: Bike-sharing-dataset
- **Nama:** Bella Melati Wiranur Dwifani
- **Email:** bellamelati21@if.unjani.ac.id
- **ID Dicoding:** JLX12JYJ6Z72

## Menentukan Pertanyaan Bisnis

- Bagaimana pola dari penggunaan bike-sharing bisa dipengaruhi oleh kondisi cuaca? Akankah ada perbedaan secara signifikan antara pengguna terdaftar dan pengguna yang belum terdaftar dalam pola penggunaan pada hari kerja dan diluar hari kerja?
- Bagaimana korelasi antara suhu dan jumlah perjalanan pada hari kerja dan diluar hari kerja? Apakah nantinya akan terdapat sebuah gaya/mode tertentu yang dapat diidentifikasi berdasarkan variabel cuaca dan hari kerja?

## Import Semua Packages/Library yang Digunakan
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sn
import streamlit as st

"""## Data Wrangling

### Gathering Data
"""

day_df=pd.read_csv('day.csv')
day_df.head()
hour_df=pd.read_csv('hour.csv')
hour_df.head()

st.title('Bike Sharing Data Analysis')

"""### Assessing Data"""

st.header('Assesing Data')
st.subheader('Day Dataset')
st.write(day_df.head())
st.write(day_df.info())
st.write(day_df.describe())

st.subheader('Hour Dataset')
st.write(hour_df.head())
st.write(hour_df.info())
st.write(hour_df.describe())

"""### Cleaning Data"""

st.header('Cleaning Data')
day_df.drop_duplicates(inplace=True) #Duplikat data
st.write("Jumlah duplikasi hari : ", day_df.duplicated().sum())

st.write("Missing values in day_df:") #missing value
st.write(day_df.isna().sum())
st.write("Missing values in hour_df:")
st.write(hour_df.isna().sum())

"""## Exploratory Data Analysis (EDA)"""

#antara workingday dan weathersit
st.bar_chart(day_df['workingday'].value_counts()) #distribusi dari workingday
st.write(day_df['workingday'].describe()) #statistik dari workingday
hour_df.sample(5)
st.bar_chart(hour_df['weathersit'].value_counts()) #distribusi dari weathersit
st.write(hour_df['weathersit'].describe()) #statistik dari weathersit

"""### Explore Day_df dan Hour_df"""

#menggabungkan day_df dan hour_df
hour_df = pd.merge(
    left=day_df,
    right=hour_df,
    how="left",
    left_on="dteday",
    right_on="dteday"
)
st.write(hour_df.head())

"""## Visualization & Explanatory Analysis

### Pertanyaan 1: Scatter Plot Suhu & dan jumlah perjalanan.
Membuat scatter plot ini gunanya untuk membandingkan suhu dengan jumlah perjalanan pada hari kerja.
"""

fig, ax = plt.subplots(figsize=(10, 5))
ax.scatter(x=day_df['temp'], y=day_df['cnt'], c=day_df['workingday'], cmap='viridis')
ax.set_title('Suhu (temp) dan Jumlah Perjalanan (count)')
ax.set_xlabel('Temp')
ax.set_ylabel('Count')
st.pyplot(fig)

"""### Pertanyaan 2: Grafik garis pola pengguna harian.
Membuat grafik garis dari pola pengguna harian pada bike-sharing-datasheet di hari kerja dan di hari luar kerja.
"""

fig, ax = plt.subplots(figsize=(10, 5))
ax.plot(day_df['dteday'], day_df['cnt'], marker='o', linestyle='-')
ax.set_title('Pola Pengguna Harian')
ax.set_xlabel('Date')
ax.set_ylabel('Count')
ax.tick_params(axis='x', rotation=45)
st.pyplot(fig)

"""## Conclusion

- Pertanyaan 1 : Menunjukkan bahwa pada hari kerja pengguna terdaftar cenderung menyewa sepeda lebih banyak utama saat suhu tinggi. Di hari libur, pola ini bisa saja berbeda dan terlihat adanya perbedaan secara signifikan diantara pengguna terdaftar dan tidak terdaftar.
- Pertanyaan 2 : Menunnjukkan bahwa pada hari kerja, terdapat korelasi positif antara suhu dan jumlah perjalanan, terutama untuk pengguna terdaftar saja. Namun, pada hari libur mungkin saja pola ini bisa berbeda dan memerlukan lebih banyak lagi eksplorasi untuk kedepannya.
"""

# Sidebar for date and time selection
st.sidebar.header('Pilih Hari dan Jam')
selected_day = st.sidebar.selectbox('Pilih Hari', day_df['dteday'].unique())
selected_hour = st.sidebar.selectbox('Pilih Jam', hour_df['hr'].unique())
# Filter data based on selected day and hour
day_filtered_data = day_df[day_df['dteday'] == selected_day]
hour_filtered_data = hour_df[(hour_df['dteday'] == selected_day) & (hour_df['hr'] == selected_hour)]